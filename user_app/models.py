from django.db import models

class UserInfo(models.Model):
    id = models.CharField(max_length=255, null=False, blank=True, primary_key=True)
    nick_name = models.CharField(max_length=255, null=True, blank=True)
    name = models.CharField(max_length=255, null=True, blank=True)
    gender = models.BooleanField(null=True, blank=True)
    birth_year = models.IntegerField(null=True, blank=True)
    birth_month = models.IntegerField(null=True, blank=True)
    birth_day = models.IntegerField(null=True, blank=True)
    is_in_school = models.BooleanField(null=True, blank=True)
    is_in_school_authenticated = models.BooleanField(null=True, blank=True)
    current_student_stage = models.CharField(max_length=255, null=True, blank=True)
    college_enter_year = models.IntegerField(null=True, blank=True)
    is_invited_to_school = models.BooleanField(null=True, blank=True)
    school_invitor = models.CharField(max_length=255, null=True, blank=True)
    school_invitation_reason = models.CharField(max_length=255, null=True, blank=True)
    location_province = models.CharField(max_length=255, null=True, blank=True)
    location_city = models.CharField(max_length=255, null=True, blank=True)
    academic_certificate = models.CharField(max_length=255, null=True, blank=True)
    academic_certificate_type = models.CharField(max_length=255, null=True, blank=True)
    mianji_goal = models.CharField(max_length=255, null=True, blank=True)
    is_real_person_authenticated = models.BooleanField(null=True, blank=True)
    avatar_image_url = models.CharField(max_length=255, null=True, blank=True)
    is_avatar_checked = models.BooleanField(null=True, blank=True)
    is_safe_authenticated = models.BooleanField(null=True, blank=True)
    last_safe_authenticated_time = models.BigIntegerField(null=True, blank=True)
    last_pay_safe_authenticated_time = models.BigIntegerField(null=True, blank=True)
    safe_json = models.CharField(max_length=255, null=True, blank=True)
    is_married = models.BooleanField(null=True, blank=True)
    is_married_authenticated = models.BooleanField(null=True, blank=True)
    last_married_authenticated_time = models.BigIntegerField(null=True, blank=True)
    last_pay_married_authenticated_time = models.BigIntegerField(null=True, blank=True)
    height = models.IntegerField(null=True, blank=True)
    weight = models.IntegerField(null=True, blank=True)
    college = models.CharField(max_length=255, null=True, blank=True)
    hukou_province = models.CharField(max_length=255, null=True, blank=True)
    hukou_city = models.CharField(max_length=255, null=True, blank=True)
    hometown_province = models.CharField(max_length=255, null=True, blank=True)
    hometown_city = models.CharField(max_length=255, null=True, blank=True)
    business = models.CharField(max_length=255, null=True, blank=True)
    job = models.CharField(max_length=255, null=True, blank=True)
    company = models.CharField(max_length=255, null=True, blank=True)
    salary_min = models.IntegerField(null=True, blank=True)
    salary_max = models.IntegerField(null=True, blank=True)
    house_purchased = models.BooleanField(null=True, blank=True)
    house_purchased_city = models.CharField(max_length=255, null=True, blank=True)
    car_purchased = models.BooleanField(null=True, blank=True)
    license_plate_city = models.CharField(max_length=255, null=True, blank=True)
    wealth_level = models.CharField(max_length=255, null=True, blank=True)
    is_wealth_level_authenticated = models.BooleanField(null=True, blank=True)
    extend_authentication = models.JSONField(null=True, blank=True)
    tags = models.JSONField(null=True, blank=True)
    tags_like = models.JSONField(null=True, blank=True)
    images_desc_list = models.JSONField(null=True, blank=True)
    characters = models.JSONField(null=True, blank=True)
    psychological_evaluations = models.JSONField(null=True, blank=True)
    valid_mian_ji_s = models.JSONField(null=True, blank=True)
    moments = models.JSONField(null=True, blank=True)

    def __str__(self):
        return self.nick_name if self.nick_name else str(self.id)
